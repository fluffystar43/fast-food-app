// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  phone    String @unique
  email    String @unique
  password String

  nickName   String  @unique @map("nick_name")
  firstName  String  @map("first_name")
  lastName   String  @map("last_name")
  middleName String? @map("middle_name")
  avatarPath String  @default(".uploads/default_avatar.png") @map("avatar_path")
  orders     Order[]

  @@map("user")
}

model Product {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name        String  @unique
  slug        String  @unique
  desctiption String
  price       Decimal
  image       String

  @@map("product")
}

model Category {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name  String @unique
  slug  String @unique
  image String

  @@map("category")
}

model Order {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  reference String @unique

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  @@map("order")
}
